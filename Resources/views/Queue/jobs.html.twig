{% extends "DtcGridBundle:Page:datatables.html.twig" %}
{% block title %}DtcQueue - Admin - Live Jobs{% endblock %}
{% block grid %}
    {% include 'DtcQueueBundle:Queue:nav.html.twig' %}

    <h3>Live Jobs</h3>
    {{ dtc_grid.render | raw }}
    <div class="archive-jobs form-group form-inline">
        <label for="workerName">WorkerName: </label>
        <select id="workerName" class="form-control" name="workerName">
            <option value="">Any</option>
            {% for workerName, method in worker_methods %}
                <option value="{{ workerName }}">{{ workerName }}</option>
            {% endfor %}
        </select>
        <label for="method">Method: </label>
        <select id="method" class="form-control" name="method">
            <option value="">Any</option>
        </select>
        <button id="jobs-archive" class="btn btn-primary"><i class="fa fa-circle-o-notch fa-spin hidden"></i> Archive</button>
    </div>
    <script>
        var fetchPath = '{{ path('dtc_queue_archive') }}';
        var workerMethods = {{ worker_methods|json_encode|raw }};
        var workerNameElement = document.getElementById('workerName');
        var methodElement = document.getElementById('method');
        var originalMethodHtml = methodElement.innerHTML;
        var archiveButton = document.getElementById('jobs-archive');
        archiveButton.addEventListener('click', archiveJobs);
        workerNameElement.addEventListener('change', workerNameChange);
        function workerNameChange() {
          var workerName = getSelected(workerNameElement);
          if (workerName) {
            methodElement.innerHTML = generateOptions(workerMethods[workerName]);
            return;
          }
          methodElement.innerHTML = originalMethodHtml;
        }

        function getSelected(element) {
          var idx = element.selectedIndex;
          if (idx > 0) {
            var options = element.getElementsByTagName('option');
            var optionElement = options[idx];
            if (optionElement) {
              return optionElement.value;
            }
          }
          return null
        }

        function generateOptions(list) {
          var optionHtml = '<option value="">Any</option>';
          for (var i = 0, len = list.length; i < len; i++) {
            var method = list[i];
            optionHtml += '<option value"' + method + '">' + method + '</option>';
          }
          return optionHtml;
        }

        function archiveJobs() {
          var workerName = getSelected(workerNameElement);
          var method = getSelected(methodElement);
          var formData = new FormData;
          var spinner = archiveButton.getElementsByTagName('i');
          spinner[0].classList.remove('hidden');

          // disable all the buttons
          var buttons = document.getElementsByTagName('button');
          for (var i = 0, len = buttons.length; i < len; i++) {
            buttons[i].disabled = true;
          }

          var pagination = document.getElementsByClassName('dataTables_paginate');
          pagination[0].style.visibility = 'hidden';

          if (workerName) {
            formData.set('workerName', workerName);
          }
          if (method) {
            formData.set('method', method);
          }

          fetch(fetchPath, {
            credentials: 'include',
            method: 'post',
            body: formData
          }).then(function (response) {
            //window.location.reload();
          });
        }
    </script>

{% endblock %}
